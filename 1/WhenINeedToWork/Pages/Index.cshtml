@page
@model IndexModel
@{
  ViewData["Title"] = "Home page";
}
<head>


  <link rel="stylesheet" href="css/modal.css" />
  <link rel="stylesheet" href="https://unpkg.com/js-year-calendar@latest/dist/js-year-calendar.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://unpkg.com/bootstrap-datepicker@1.8.0/dist/css/bootstrap-datepicker.standalone.min.css" />
  <link href="" />
  <style>
    input[type=submit] {
      background-color: #4CAF50;
      border: none;
      color: white;
      padding: 6px 17px;
      text-decoration: none;
      margin: 4px 2px;
      cursor: pointer;
    }

    .salary {
      width: 500px;
      padding: 0px;
      text-align: left;
    }
  </style>
</head>

<div class="text-center">
  <h1 class="display-4">"WhenINeedToWork"</h1>
  <p>Здесь вы сможете создать свой календарь рабочих дней</p>
</div>

<body onload="startTime()">
  <script src="js/clock.js"></script>
  <div id="txt"></div>
  <div class="filter"></div>
</body>




<body>
    <form name="workDays" id="workDays" method="post">
        <p>Выберите свой первый рабочий день</p>
        <p>
            @if (Model.workstartday.Year > 1970)
            {
                <input type="date" name="work_start_day" value=@Model.workstartday.ToString("yyyy-MM-dd")>
            }
            else
            {
                <input type="date" name="work_start_day" value=@Model.Today>
            }

        <select name="working">
            <option selected>@Model.work</option>
            <option>1</option>
            <option>2</option>
            <option>3</option>
            <option>4</option>
            <option>5</option>
            <option>6</option>
            <option>7</option>
        </select>
            x
        <select name="flexing">
            <option selected>@Model.flex</option>
            <option>1</option>
            <option>2</option>
            <option>3</option>
            <option>4</option>
            <option>5</option>
            <option>6</option>
            <option>7</option>
        </select>
            <input type="submit" name="submit" title="Построить календарь" value="Построить календарь"> @*submit нужен для отправки на сервер*@
        </p>
    </form>
    <div class="modal-footer">
        <input id="calendarName" type="calendarName" name="calendarName" placeholder="Название" autocomplete="off" value="Календарь">
        <form asp-page-handler="SaveNewCalendar" asp-route-wsd=@Model.workstartday.ToString() asp-route-working=@Model.work asp-route-flexing=@Model.flex asp-route-currYear=@Model.currYear method="post">
            <button class="btn btn-primary">Сохранить</button>
        </form>
    </div>

    <div data-provide="calendar" name="calendar" id="calendar">

    </div>

    <div class="modal fade" id="event-modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Событие</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Отмена">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="event-index">
                    <form class="form-horizontal">
                        <div class="form-group row">
                            <label for="event-name" class="col-sm-4 control-label">Название</label>
                            <div class="col-sm-8">
                                <input id="event-name" name="event-name" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="event-location" class="col-sm-4 control-label">Место</label>
                            <div class="col-sm-8">
                                <input id="event-location" name="event-location" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="min-date" class="col-sm-4 control-label">Дата</label>
                            <div class="col-sm-8">
                                <div class="input-group input-daterange" data-provide="datepicker">
                                    <input id="min-date" name="event-start-date" type="text" class="form-control">
                                    <div class="input-group-prepend input-group-append">
                                        <div class="input-group-text">to</div>
                                    </div>
                                    <input name="event-end-date" type="text" class="form-control">
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                    <button type="button" class="btn btn-primary" id="save-event">
                        Сохранить
                    </button>
        </div>
      </div>
    </div>
  </div>
  <div id="context-menu">
  </div>


  <br />


  <form name="calcSalary" id="calcSalary" onsubmit="return false;">
    <div id="salary" class="salary">
      <p>Введите данные для расчета ЗП</p>
      <p>
        Количество часов:
        <input type="text" name="hours" id="hours" autocomplete="off" style="width: 150px;" placeholder="100" onkeyup="this.value = this.value.replace(/[^\d]/g, '');" />
      </p>
      <p>
        Часовая ставка:
        <input type="text" name="payment" autocomplete="off" style="width: 170px;" id="payment" placeholder="100" onkeyup="this.value = this.value.replace(/[^\d]/g, '');" />
      </p>
      <p>
        Тип зарплаты:
        <select style="width: 180px;" id="salaryType" name="salaryType">
          <option>С вычетом налогов</option>
          <option>Без вычета налогов</option>
        </select>
      </p>
      <p><input type="submit" id="calculateSalary" title="Рассчитать" value="Рассчитать" ;></p>
      <div id="result"></div>
    </div>
  </form>



</body>

<footer>
  <div class="text-center">
    <img src="~/images/question.png" alt="Помощь">
    <a asp-page="/Help">Помощь   </a>
    <img src="~/images/printer.png" alt="Распечатать">
    <a href="javascript:void(0);" onclick="window.print()">Распечатать     </a>
    <!--<button onclick="window.print()">Распечатать</button>--> @*пододвинуть кнопку вниз*@
    <a href="https://www.donationalerts.com/r/deppa" target="_blank"><img src="~/images/credit-card.png" alt="Плоти"></a>
    <a href="https://www.donationalerts.com/r/deppa">Поддержать проект</a>
  </div>
</footer>

<script src="js/base.js"></script>



@*<script src="js/js-year-calendar.js"></script>
  <script src="js/js-year-calendar.ru.js"></script>*@
<script src="js/plugins/modal.js"></script>
<script src="https://unpkg.com/js-year-calendar@latest/dist/js-year-calendar.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://unpkg.com/popper.js@1.14.7/dist/umd/popper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js"></script>
<script src="https://unpkg.com/js-year-calendar@latest/dist/js-year-calendar.min.js"></script>
<script src="https://unpkg.com/js-year-calendar@latest/locales/js-year-calendar.ru.js"></script>



<script>
  //функция для печати она сломана и работает не так как надо
  //Очень грустно
  printDivCSS = new String('<link href="https://unpkg.com/js-year-calendar@latest/dist/js-year-calendar.min.css" rel = "stylesheet"> ' +
    '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css" />' +
    '<link rel = "stylesheet" href = "https://unpkg.com/bootstrap-datepicker@1.8.0/dist/css/bootstrap-datepicker.standalone.min.css" />');
  function printPageArea(areaID) {
    var printContent = document.getElementById(areaID);
    var WinPrint = window.open('', '', 'width=900,height=650');
    WinPrint.document.write(printDivCSS);
    WinPrint.document.write(printContent.innerHTML);
    WinPrint.document.close();
    WinPrint.focus();
    WinPrint.print();

  }
</script>


@Html.AntiForgeryToken()

<script type="text/javascript" language="JavaScript">
    jQuery(function ($) {
        let calendar = null;

        function editEvent(event) {
            //$('#event-modal input[name="event-index"]').val(event ? event.id : '');
            //$('#event-modal input[name="event-name"]').val(event ? event.name : '');
            //$('#event-modal input[name="event-location"]').val(event ? event.location : '');
            //$('#event-modal input[name="event-start-date"]').datepicker('update', event ? event.startDate : '');
            //$('#event-modal input[name="event-end-date"]').datepicker('update', event ? event.endDate : '');
            //$('#event-modal').modal();

        }

        function deleteEvent(event) {
            @*var item1 = event.id;
            var item3 = "@Model.workstartday";
            var item6 = "@Model.work";
            var item7 = "@Model.flex";
            $.ajax({
                    type: "POST",
                    url: "/Index?handler=DeleteEvent",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: JSON.stringify({
                        id: item1,
                        name: event.name,
                        startDate: event.startDate,
                        endDate: event.endDate,
                        wStart: item3,
                        w: item6,
                        f: item7
                    }),

                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        var dvItems = $("#dvPostItems");
                        dvItems.empty();
                        $.each(response, function (i, item) {
                            var $tr = $('<li>').append(item).appendTo(dvItems);
                        });
                    },
                    failure: function (response) {
                        alert(response);
                    }
            });
            refreshWorkCalendar();*@
        }

        function saveEvent() {
            @*var event = {
                id: $('#event-modal input[name="event-index"]').val(),
                name: $('#event-modal input[name="event-name"]').val(),
                location: $('#event-modal input[name="event-location"]').val(),
                startDate: $('#event-modal input[name="event-start-date"]').datepicker('getDate'),
                endDate: $('#event-modal input[name="event-end-date"]').datepicker('getDate')
            }

            var dataSource = calendar.getDataSource();
            var id_e = 0;
            if (event.id) {
                id_e = event.id;
                for (var i in dataSource) {
                    if (dataSource[i].id == event.id) {
                        dataSource[i].name = event.name;
                        dataSource[i].location = event.location;
                        dataSource[i].startDate = event.startDate;
                        dataSource[i].endDate = event.endDate;
                    }
                }
            }
            //else {
            //    var newId = 0;
            //    for (var i in dataSource) {
            //        if (dataSource[i].id > newId) {
            //            newId = dataSource[i].id;
            //        }
            //    }

            //    newId++;
            //    event.id = newId;

            //    dataSource.push(event);
            //}

            var item3 = "@Model.workstartday";
            var item6 = "@Model.work";
            var item7 = "@Model.flex";

            $.ajax({
                type: "POST",
                url: "/Index?handler=AddOrUpdate",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: JSON.stringify({
                    id: id_e,
                    name: event.name,
                    location: event.location,
                    startDate: event.startDate,
                    endDate: event.endDate,
                    wStart: item3,
                    w: item6,
                    f: item7
                }),

                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var dvItems = $("#dvPostItems");
                    dvItems.empty();
                    $.each(response, function (i, item) {
                        var $tr = $('<li>').append(item).appendTo(dvItems);
                    });
                },
                failure: function (response) {
                    alert(response);
                }
            });
            calendar.setDataSource(dataSource);
            $('#event-modal').modal('hide');*@
        }

        $('#save-event').click(function () {
            //saveEvent();
            //refreshWorkCalendar();
        });
        @*function refreshWorkCalendar() {
            calendar = new Calendar('#calendar', {
                enableContextMenu: false,
                enableRangeSelection: false,
                contextMenuItems: [
                    {
                        text: 'Обновить',
                        click: editEvent
                    },
                    {
                        text: 'Удалить',
                        click: deleteEvent
                    }
                ],
                selectRange: function (e) {
                    editEvent({ startDate: e.startDate, endDate: e.endDate });
                },
                mouseOnDay: function (e) {
                    if (e.events.length > 0) {
                        var content = '';

                        for (var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '  </div>'
                                + '<div class="event-location>' + e.events[i].location + ' </div>'
                                + '</div>';
                        }

                        $(e.element).popover({
                            trigger: 'manual',
                            container: 'body',
                            html: true,
                            content: content
                        });

                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function (e) {
                    if (e.events.length > 0) {
                        $(e.element).popover('hide');
                    }
                },
                dayContextMenu: function (e) {
                    $(e.element).popover('hide');
                },
                dataSource: [

                   @for (int i = 0; i < Model.workingDays.Count; i++){
                        int b = i;
                        if (Model.events.Count != 0) b = Model.events[Model.events.Count - 1].id + (i + 1);
                          @:{
                          @:name: 'Рабочий день',
                          @:color: '#ff0000',
                          @:id: @b,
                          @:location: '-',
                          @:startDate: new Date(@Model.workingDays[i].Year, @Model.workingDays[i].Month- 1, @Model.workingDays[i].Day),
                          @:endDate: new Date(@Model.workingDays[i].Year, @Model.workingDays[i].Month-1, @Model.workingDays[i].Day),
                          @:}
                          if (i != Model.workingDays.Count-1)
                           {
                           @:,
                           }
                     }
            ]});
        calendar.setStyle('background');
        }*@
        //jQuery(document).ready(function ($)
        $(function () {
            calendar = new Calendar('#calendar', {
                enableContextMenu: false,
                enableRangeSelection: false,
                contextMenuItems: [
                    {
                        text: 'Обновить',
                        click: editEvent
                    },
                    {
                        text: 'Удалить',
                        click: deleteEvent
                    }
                ],
                selectRange: function (e) {
                    editEvent({ startDate: e.startDate, endDate: e.endDate });
                },
                mouseOnDay: function (e) {
                    if (e.events.length > 0) {
                        var content = '';

                        for (var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '  </div>'
                                + '<div class="event-location>' + e.events[i].location + ' </div>'
                                + '</div>';
                        }

                        $(e.element).popover({
                            trigger: 'manual',
                            container: 'body',
                            html: true,
                            content: content
                        });

                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function (e) {
                    if (e.events.length > 0) {
                        $(e.element).popover('hide');
                    }
                },
                dayContextMenu: function (e) {
                    $(e.element).popover('hide');
                },
                dataSource: [
                    @for (int i = 0; i < Model.workingDays.Count; i++){
                        int b = i;
                        if (Model.events.Count != 0) b = Model.events[Model.events.Count - 1].id + (i + 1);
                          @:{
                          @:name: 'Рабочий день',
                          @:color: '#ff0000',
                          @:id: @b,
                          @:location: '-',
                          @:startDate: new Date(@Model.workingDays[i].Year, @Model.workingDays[i].Month- 1, @Model.workingDays[i].Day),
                          @:endDate: new Date(@Model.workingDays[i].Year, @Model.workingDays[i].Month-1, @Model.workingDays[i].Day),
                          @:}
                          if (i != Model.workingDays.Count-1)
                           {
                           @:,
                           }
                     }
            ]});
        calendar.setStyle('background');
       });
 });
</script>
@*между ними*@

@*<script src="js/plugins/year-calendar.js"></script>*@     @*скорее всего код для календаря надо нпаисать там*@
<script src="js/plugins/modal.js"></script>

<script src="js/index.js"></script>
@*обязательно в конце*@



